input {
    udp {
            port => 10515
#            mode => "server"
#            ssl_enable => true                
#            ssl_cert => "/etc/logstash/config/keys/machine-cert.pem"
#            #ssl_extra_chain_certs => "/etc/logstash/config/keys/ca.pem"
#            ssl_certificate_authorities => "/etc/logstash/config/keys/ca.pem"
#	    ssl_key => "/etc/logstash/config/keys/machine-key.pem"                
#            ssl_verify => false
#            add_field => {                    
#                    "logsourcetype" => "linux"
#            }
        }
}
filter{
	grok {
		tag_on_failure => ["_grok_rsyslog_notparsed"]
		match => ["message", '(\<[0-9]+\>)?%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:sysloghost} %{PROG:program}([:])?(\[%{POSINT:pid}\])?([:])? Remote %{IP:client_ip} wants \'%{DATA:domain}\|%{WORD:record_type}\', do = %{WORD:do}, bufsize = %{WORD:bufsize}: packetcache %{WORD:packetcache}']		
	}	
	if "_grok_rsyslog_notparsed" not in [tags] {
		mutate {remove_field => ["message"]}
	} else {
		drop {}
	}
}
output {	
		elasticsearch {
			hosts => ["127.0.0.1:9200"]
			index => "dns-%{+YYYY.MM.dd}"
		}
}
