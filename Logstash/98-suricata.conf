#on recup sur le port 1514 car le port 514 < 1024 et ca pose problÃ¨me
input {
	udp {
		port => 1516
		#type => syslog
		add_field => { "source" => "suricata" }
	}
}

#----------------- traitement ---------------------------

filter {
 	grok {
		match => ["message", '\[%{INT:rule_GID}:%{INT:rule_SID}:%{INT:rule_not_defined}\] %{DATA:Detection_text} \[Classification: %{DATA:Categorie}\] \[Priority: %{INT:Priority}\]: <%{DATA:Network_card}> \{%{DATA:Type}\} %{DATA:Src_IP}:%{INT:Src_Port} -> %{DATA:Dst_IP}:%{INT:Dst_Port}']
	}
	#mutate {
	#	convert => ["rule_GID", "integer"]
	#	convert => ["rule_SID", "integer"]
	#	convert => ["rule_SID", "integer"]
	#}

#geolocalisation de l'ip src

	if [Src_IP] and [Src_IP] !~ "(^127.0.0.1)|(^10.)|(^172.1[6-9].)|(^172.2[0-9].)|(^172.3[0-1].)|(^192.168.)|(^169.254.)" {
		geoip {
				source => "Src_IP"
				database => "/etc/logstash/config/GeoLite2-City.mmdb"
		}
		if ![geoip] {
			geoip {
				source => "Src_IP"
				database => "/etc/logstash/config/GeoLite2-Country.mmdb"
			}
		}
		if ![geoip] {
			geoip {
				source => "Src_IP"
				database => "/etc/logstash/config/GeoLite2-ASN.mmdb"
			}
		}
		if ![geoip][country_name] and [geoip][continent_code] {
			mutate{
				add_field => { "geoip[country_name]" => "%{geoip[continent_code]}" }
			}
		}
	}
}

# sortie
output {
	elasticsearch {
		hosts => ["127.0.0.1:9200"]
		index => "suricata-%{+YYYY.MM.dd}"
		#document_type => "haproxy"
	}
}

