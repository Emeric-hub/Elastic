
#-------------------------------------------------------------
#EDE - 13/11/2019
# Recup Log F-secure pour SIEM
#-------------------------------------------------------------

#---------------- Entrée sur port 514 (syslog) --------------
input {
	udp {
		port => 1514
		codec => plain
	}
}
#---------------- Traitement --------------
filter {

#Generic Parsing
# Log format

#<33>Feb 20 16:36:05 f-secure.isl.leni.fr Virus Alert: Not disinfected [alertMeta@0 oid="1.3.6.1.4.1.2213.48.2147483647.204" shost="f-secure.none" uid="k65j-r5hh-j6c7-dc2w" domainTreePath="Root/Linux SERVEUR/f-secure.none" suser="admin" message="Malicious code found in file /tmp/test.av.virus. Infection: EICAR_Test_File Action: The scanner was unable to disinfect it. "]

	grok {
		match => ["message", '<33>%{DATA:date} %{DATA:day} %{TIME:time} %{DATA:hostname} %{GREEDYDATA:type}(: %{GREEDYDATA:type_result})? \[%{GREEDYDATA:other}\]']
		add_tag => ["fsecure"]
		tag_on_failure => ["parsing_failure"]
	}

# Parsing other from previous Grok
# format :
# alertMeta@0 oid="1.3.6.1.4.1.2213.48.2147483647.203" shost="f-secure.none" uid="k65j-r5hh-j6c7-dc2w" domainTreePath="Root/Linux SERVEUR/f-secure.none" suser="admin" message="Malicious code found in file /tmp/test.av.virus. Infection: EICAR_Test_File Action: The file was renamed. "

	if "parsing_failure" not in [tags] {
		grok {
			match => ["other", '%{GREEDYDATA:threat_name} oid="%{DATA:oid}" shost="%{DATA:shost}" uid="%{DATA:shost_uid}" domainTreePath="%{DATA:domaintreepath}" suser="%{DATA:suser}" message="%{GREEDYDATA:threat_message}"']
			tag_on_failure => ["parsing_failure"]
		}
	}

# Parsing Threat_message from previous Grok
# format :
# Malicious·code·found·in·file·/tmp/test.av.virus.·Infection:·EICAR_Test_File·Action:·The·file·was·renamed.· 

	if "parsing_failure" not in [tags] {
		grok {
			match => ["threat_message", '%{GREEDYDATA:Cause} Infection: %{GREEDYDATA:Infection_name} Action: %{GREEDYDATA:Infection_action}']
			tag_on_failure => ["parsing_failure"]
		}
	}
	
#Nettoyage des champs inutiles
	if "parsing_failure" not in [tags] {
		mutate {
			remove_field => [ "time", "date","other","threat_message" ]
		}
		
	}
}

#---------------- Sortie Fichier --------------

output {
		file {
			path => "..\logs\f-secure.log"
			codec => line { format => "%{message}" }
			}
		stdout {}
	#}

}
